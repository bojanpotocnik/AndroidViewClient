#! /usr/bin/env python# -*- coding: utf-8 -*-'''Copyright (C) 2013-2018  Diego Torres MilanoCreated on 2018-03-29 by Culebra v15.0.1                      __    __    __    __                     /  \  /  \  /  \  /  \____________________/  __\/  __\/  __\/  __\________________________________________________/  /__/  /__/  /__/  /________________________________                   | / \   / \   / \   / \   \___                   |/   \_/   \_/   \_/   \    o \                                           \_____/--<@author: Diego Torres Milano@author: Jennifer E. Swofford (ascii art snake)'''import osimport sysimport xmlrunnertry:    sys.path.insert(0, os.path.join(os.environ['ANDROID_VIEW_CLIENT_HOME'], 'src'))except:    passfrom androidviewclient3.viewclient import CulebraTestCaseTAG = 'CULEBRA'class CulebraTests(CulebraTestCase):    @classmethod    def setUpClass(cls):        cls.kwargs1 = {'ignoreversioncheck': False, 'verbose': False, 'ignoresecuredevice': False}        cls.kwargs2 = {'forceviewserveruse': False, 'useuiautomatorhelper': False, 'ignoreuiautomatorkilled': True, 'autodump': False, 'startviewserver': True, 'compresseddump': True}        cls.options = {'start-activity': None, 'concertina': False, 'device-art': None, 'use-jar': False, 'multi-device': False, 'unit-test-class': True, 'save-screenshot': None, 'use-dictionary': False, 'glare': False, 'dictionary-keys-from': 'id', 'scale': 0.5, 'find-views-with-content-description': True, 'window': -1, 'orientation-locked': None, 'concertina-config': None, 'save-view-screenshots': None, 'find-views-by-id': True, 'log-actions': False, 'use-regexps': False, 'null-back-end': False, 'auto-regexps': None, 'do-not-verify-screen-dump': True, 'verbose-comments': False, 'gui': True, 'find-views-with-text': True, 'prepend-to-sys-path': True, 'install-apk': None, 'drop-shadow': False, 'output': None, 'unit-test-method': None, 'interactive': False}        cls.sleep = 5    def setUp(self):        super(CulebraTests, self).setUp()    def tearDown(self):        super(CulebraTests, self).tearDown()    def preconditions(self):        if not super(CulebraTests, self).preconditions():            return False        return True    def testSomething(self):        if not self.preconditions():            self.fail('Preconditions failed')        _s = CulebraTests.sleep        _v = CulebraTests.verbose        self.vc.dump(window=-1)        self.vc.findViewWithContentDescriptionOrRaise('''Home''').touch()if __name__ == '__main__':    CulebraTests.main(testRunner=xmlrunner.XMLTestRunner(output='test-reports'))